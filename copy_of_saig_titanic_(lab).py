# -*- coding: utf-8 -*-
"""Copy of SAIG - Titanic (Lab).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CkOYbS_jO2nqRk6zWmWXC3dcEL42jyGQ

# Software Technology with AI workshop

> ## *Author* : SAIG Lab
> ### *Affiliation* : Computer Engineering, King Mongkut's Institute of Technology Ladkrabang (KMITL)
> #### *Updated Date* : 2024-08-01
---

> <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png" /></a><br />This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.

---

**คำสั่ง**


1.   ไปที่ File แล้วเลือก "Save a Copy in Drive"
2.   เติม code ลงในช่องให้ถูกต้อง (จาก https://github.com/SAIG-KMITL/titanic-workshop/ )

---

**นำเข้าข้อมูล**
"""

import pandas as pd

csv_path = "https://rathachai.github.io/DA-LAB/datasets/titanic.csv"
df = pd.read_csv(csv_path)

"""**แสดงผลข้อมูล df**"""

df

"""**เลือกเฉพาะคอลัมน์ Sex, Age, และ Survived**"""

df = df[['Sex', 'Age', 'Survived']].copy()

"""**ลบข้อมูลที่เป็นค่าว่างทิ้ง**"""

df.dropna(inplace=True)

"""**แสดงผลข้อมูล df**"""

df

"""**สร้างตัวแปร X ให้มีคอลัมน์ Sex และ Age**"""

X = df[['Sex', 'Age']].copy()

"""**แปลง Sex จาก male, female ไปเป็น 0 กับ 1**"""

X['Sex'] = X['Sex'].map({'male':1, 'female':0})

"""**สร้างตัวแปร y ให้มีเพียงค่า Suvived**"""

y = df['Survived']

"""**แสดงตัวแปร X**"""

X

"""**แสดงตัวแปร y**"""

print(y)

"""**แบ่งขัอมูลสำหรับเรียนรู้และทดสอบ**"""

df.dropna(inplace=True)

"""**แสดงข้อมูลของ X_train, X_test, y_train, และ y_test**"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2)

X_test

print(y_train)

print(y_test)

"""**สร้าง model จากเทคนิค Decision Tree**"""

from sklearn.tree import DecisionTreeClassifier

model = DecisionTreeClassifier(max_depth=2)
model.fit(X_train,y_train)

"""**แสดงหน้าตาโมเดล**"""

from sklearn.tree import export_text

tree_text = export_text(model)
for i in range(len(X.columns)):
  tree_text = tree_text.replace('feature_'+str(i), X.columns[i])

print(tree_text)

"""**ทำนายค่าด้วยโมเดลจากข้อมูลสำหรับทดสอบ**"""

y_pred = model.predict(X_test)

"""**แสดงผลของ Decision Tree จากข้อมูลทดสอบ**"""

print(y_pred)

"""**แสดงผล Accuracy ของโมเดลจากข้อมูลทดสอบ**"""

from sklearn.metrics import accuracy_score

acc = accuracy_score(y_test, y_pred)
print('Accuracy = ', acc)

"""**ทดลองใช้จริง**
โดยใส่ Sex และ Age ของคนที่รู้จัก
"""

my_sex = 'male'  # @param ['male', 'female']
my_age = 47  # @param {type: "slider", min: 1, max: 99}

my_info = pd.DataFrame({
  'Sex': [my_sex],
  'Age': [my_age]
})

my_info['Sex'] = my_info['Sex'].map({'male':1, 'female':0})

print(model.predict(my_info))

"""

---

"""



"""## โจทย์เพิ่มเติม
ทดลองปรับใช้เทคนิคอื่นๆ เพื่อให้ได้ค่า Accuracy ที่สูงขึ้น เช่น

```
from sklearn.neural_network import MLPClassifier
model = MLPClassifier(hidden_layer_sizes=(1, 1), activation='relu')
model.fit(X_train,y_train)

y_pred = model.predict(X_test)

from sklearn.metrics import accuracy_score
acc = accuracy_score(y_test, y_pred)
print('Accuracy = ', acc)
```


"""

# ทดลองที่นี่

"""---
https://www.ce.kmitl.ac.th/

## つづく
"""